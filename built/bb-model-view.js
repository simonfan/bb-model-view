//     bb-model-view
//     (c) simonfan
//     bb-model-view is licensed under the MIT terms.

define("__bb-model-view/model-to-dom/initialize",["require","exports","module","jquery.filler"],function(e,t,i){e("jquery.filler"),i.exports=function(){this.fill=this.$el.filler(this.map)}}),define("__bb-model-view/dom-to-model/read-dom-value",["require","exports","module","lodash","jquery"],function(e,t,i){var o=e("lodash"),l=e("jquery"),a={"default":function(e){return e.val()},DIV:function(e){return e.html()},INPUT:function(e){return"checkbox"===e.prop("type")?o.map(e.filter(":checked"),function(e){return l(e).val()}):e.val()}};i.exports=function(e){var t=e.prop("tagName"),i=a[t]||a["default"];return i(e)}}),define("__bb-model-view/dom-to-model/update",["require","exports","module","jquery","./read-dom-value"],function(e,t,i){var o=e("jquery"),l=e("./read-dom-value");i.exports=function(e){var t=o(e.target),i=t.data("_dock_-bound-attribute");if(i){var a=t.data("_dock_-selector"),s=this.$els[a],d=l(s),n=this.parsers[i];d=n?n.call(this,d):d,this.model.set(i,d)}}}),define("__bb-model-view/dom-to-model/bind-input",["require","exports","module","lodash","jquery","./bind-input"],function(e,t,i){{var o=e("lodash");e("jquery"),e("./bind-input")}i.exports=function l(e,t){if(o.isArray(e))o.each(e,o.bind(function(e){l.call(this,e,t)},this));else{var i=this.$els[e]=this.$el.find(e);i.length>0&&i.data("_dock_-bound-attribute",t).data("_dock_-selector",e)}}}),define("__bb-model-view/dom-to-model/initialize",["require","exports","module","lodash","./update","./bind-input"],function(e,t,i){var o=e("lodash"),l=e("./update"),a=e("./bind-input");i.exports=function(){this.$els={},o.each(this.map,o.bind(function(e,t){a.call(this,e,t)},this));var e=o(this.$els).mapValues(function(e,t){return e.is(":input")?t.replace(/\s*->.*$/,""):!1}).values().compact().join(", ");this.$el.on("change",e,o.bind(l,this))}}),define("__bb-model-view/initialize-attach",["require","exports","module","lodash","lowercase-backbone","./model-to-dom/initialize","./dom-to-model/initialize"],function(e,t,i){var o=(e("lodash"),e("lowercase-backbone")),l=e("./model-to-dom/initialize"),a=e("./dom-to-model/initialize");i.exports=function(){l.call(this),a.call(this);var e=this.model||o.model();this.attach(e)}}),define("__bb-model-view/model-to-dom/update",["require","exports","module","lodash"],function(e,t,i){{var o=e("lodash");i.exports=function(e){var t=this.stringifiers,i=o.mapValues(e.attributes,function(e,i){var o=t[i];return o?o.call(this,e):e});this.fill(i)}}}),define("__bb-model-view/model-to-dom/attach",["require","exports","module","lodash","./update"],function(e,t,i){{var o=(e("lodash"),e("./update"));i.exports=function(){this.listenTo(this.model,"change",o),o.call(this,this.model)}}}),define("__bb-model-view/dom-to-model/attach",["require","exports","module","lodash","./update"],function(e,t,i){e("lodash"),e("./update");i.exports=function(){}}),define("__bb-model-view/events/proxy",["require","exports","module","lodash"],function(e,t,i){function o(){this.trigger.apply(this,arguments)}e("lodash");i.exports=function(){this.listenTo(this.model,"all",o)}}),define("__bb-model-view/methods",["require","exports","module","lodash","./model-to-dom/attach","./dom-to-model/attach","./events/proxy"],function(e,t){var i=(e("lodash"),e("./model-to-dom/attach")),o=e("./dom-to-model/attach"),l=e("./events/proxy");t.cache$Els=!0,t.stringifiers={},t.parsers={},t.attach=function(e){this.detach(),this.model=e,i.call(this),o.call(this),l.call(this)},t.detach=function(){this.model&&(this.stopListening(this.model),this.model=void 0)}}),define("bb-model-view",["require","exports","module","lodash","lowercase-backbone","./__bb-model-view/initialize-attach","./__bb-model-view/methods"],function(e,t,i){var o=(e("lodash"),e("lowercase-backbone")),l=e("./__bb-model-view/initialize-attach"),a=i.exports=o.view.extend({initialize:function(){o.view.prototype.initialize.apply(this,arguments),this.initializeModelDock.apply(this,arguments)},initializeModelDock:function(e){this.map=e.map||this.map,this.model=e.model||this.model,this.parsers=e.parsers||this.parsers,this.sringifiers=e.stringifiers||this.stringifiers,this.cache$Els=e.cache$Els||this.cache$Els,l.apply(this,arguments)},model:void 0,map:{}});a.proto(e("./__bb-model-view/methods"))});