//     bb-model-view
//     (c) simonfan
//     bb-model-view is licensed under the MIT terms.

define("__bb-model-view/model-to-dom/update",["require","exports","module","lodash"],function(e,i,t){{var o=e("lodash");t.exports=function(e){var i=this.stringifiers,t=o.mapValues(e.attributes,function(e,t){var o=i[t];return o?o.call(this,e):e});this.fill(t)}}}),define("__bb-model-view/model-to-dom/index",["require","exports","module","jquery.filler","./update"],function(e,i,t){var o=(e("jquery.filler"),e("./update"));t.exports=function(){this.fill=this.$el.filler(this.map),this.listenTo(this.model,"change",o),o.call(this,this.model)}}),define("__bb-model-view/dom-to-model/read-dom-value",["require","exports","module","lodash","jquery"],function(e,i,t){var o=e("lodash"),r=e("jquery"),l={"default":function(e){return e.val()},DIV:function(e){return e.html()},INPUT:function(e){return"checkbox"===e.prop("type")?o.map(e.filter(":checked"),function(e){return r(e).val()}):e.val()}};t.exports=function(e){var i=e.prop("tagName"),t=l[i]||l["default"];return t(e)}}),define("__bb-model-view/dom-to-model/update",["require","exports","module","jquery","./read-dom-value"],function(e,i,t){var o=e("jquery"),r=e("./read-dom-value");t.exports=function(e){var i=o(e.target),t=i.data("__bb_model_view__-bound-attribute");if(t){var l=i.data("__bb_model_view__-selector"),d=this.$els[l],n=r(d),s=this.parsers[t];n=s?s.call(this,n):n,this.model.set(t,n)}}}),define("__bb-model-view/dom-to-model/bind-input",["require","exports","module","lodash","jquery","./bind-input"],function(e,i,t){{var o=e("lodash");e("jquery"),e("./bind-input")}t.exports=function r(e,i){if(o.isArray(e))o.each(e,o.bind(function(e){r.call(this,e,i)},this));else{var t=this.$els[e]=this.$el.find(e);t.length>0&&t.data("__bb_model_view__-bound-attribute",i).data("__bb_model_view__-selector",e)}}}),define("__bb-model-view/dom-to-model/index",["require","exports","module","lodash","./update","./bind-input"],function(e,i,t){var o=e("lodash"),r=e("./update"),l=e("./bind-input");t.exports=function(){this.$els={},o.each(this.map,o.bind(function(e,i){l.call(this,e,i)},this));var e=o(this.$els).mapValues(function(e,i){return e.is(":input")?i.replace(/\s*->.*$/,""):!1}).values().compact().join(", ");this.$el.on("change",e,o.bind(r,this))}}),define("bb-model-view",["require","exports","module","lodash","bb-dock","lowercase-backbone","./__bb-model-view/model-to-dom/index","./__bb-model-view/dom-to-model/index"],function(e,i,t){{var o=(e("lodash"),e("bb-dock").model,e("lowercase-backbone")),r=e("./__bb-model-view/model-to-dom/index"),l=e("./__bb-model-view/dom-to-model/index");t.exports=o.view.extend({initialize:function(){o.view.prototype.initialize.apply(this,arguments),this.initializeModelView.apply(this,arguments)},initializeModelView:function(e){if(!this.model)throw new Error("No model set for model view.");e=e||{},this.map=e.map||this.map,this.parsers=e.parsers||this.parsers,this.sringifiers=e.stringifiers||this.stringifiers,r.call(this),l.call(this)},map:{},stringifiers:{},parsers:{}})}});